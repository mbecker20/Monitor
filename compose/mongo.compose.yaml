###############################
# ðŸ¦Ž KOMODO COMPOSE - MONGO ðŸ¦Ž #
###############################

## This compose file will deploy:
##   1. MongoDB
##   2. Komodo Core
##   3. Komodo Periphery

services:
  mongo:
    image: mongo
    command: --quiet # suppress mongo logs a bit
    restart: unless-stopped
    logging:
      driver: ${COMPOSE_LOGGING_DRIVER:-local}
    networks:
      - default
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
  
  core:
    image: ghcr.io/mbecker20/komodo:${COMPOSE_KOMODO_IMAGE_TAG:-latest}
    restart: unless-stopped
    depends_on:
      - mongo
    logging:
      driver: ${COMPOSE_LOGGING_DRIVER:-local}
    networks:
      - default
    ports:
      - 9120:9120
    env_file: ./compose.env
    environment:
      KOMODO_DATABASE_ADDRESS: mongo:27017
      KOMODO_DATABASE_USERNAME: ${DB_USERNAME}
      KOMODO_DATABASE_PASSWORD: ${DB_PASSWORD}
    # extra_hosts: # allows for systemd Periphery connection at "http://host.docker.internal:8120"
    #   - host.docker.internal:host-gateway
    # volumes: # Optionally mount a custom core.config.toml
    #   - /path/to/core.config.toml:/config/config.toml

  ## Deploy Periphery container using this block,
  ## or deploy the Periphery binary with systemd using https://github.com/mbecker20/komodo/tree/main/scripts
  periphery:
    image: ghcr.io/mbecker20/periphery:${COMPOSE_KOMODO_IMAGE_TAG:-latest}
    restart: unless-stopped
    logging:
      driver: ${COMPOSE_LOGGING_DRIVER:-local}
    networks:
      - default
    env_file: ./compose.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc:/proc # Allow Periphery to see processes outside of container
      - ssl:/etc/komodo/ssl # use self signed certs in docker volume, or mount your own signed certs.
      - repos:/etc/komodo/repos # manage repos in a docker volume, or change it to an accessible host directory.
      - stacks:/etc/komodo/stacks # manage stack files in a docker volume, or change it to an accessible host directory.

volumes:
  mongo-data:
  mongo-config:
  ssl:
  repos:
  stacks:

networks:
  default: {}